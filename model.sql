-- MySQL Script generated by MySQL Workbench
-- vie 12 jun 2020 22:09:27 CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema example
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `example` ;

-- -----------------------------------------------------
-- Schema example
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `example` DEFAULT CHARACTER SET utf8 ;
USE `example` ;

-- -----------------------------------------------------
-- Table `example`.`datetime_at`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`datetime_at` ;

CREATE TABLE IF NOT EXISTS `example`.`datetime_at` (
  `id` BINARY(16) NOT NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`city`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`city` ;

CREATE TABLE IF NOT EXISTS `example`.`city` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`municipality`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`municipality` ;

CREATE TABLE IF NOT EXISTS `example`.`municipality` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`postal_code`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`postal_code` ;

CREATE TABLE IF NOT EXISTS `example`.`postal_code` (
  `id` BINARY(16) NOT NULL,
  `code` VARCHAR(10) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`settlement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`settlement` ;

CREATE TABLE IF NOT EXISTS `example`.`settlement` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`zone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`zone` ;

CREATE TABLE IF NOT EXISTS `example`.`zone` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`settlement_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`settlement_type` ;

CREATE TABLE IF NOT EXISTS `example`.`settlement_type` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `example`.`catalog_postal_codes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `example`.`catalog_postal_codes` ;

CREATE TABLE IF NOT EXISTS `example`.`catalog_postal_codes` (
  `id` BINARY(16) NOT NULL,
  `state_id` BINARY(16) NULL,
  `municipality_id` BINARY(16) NULL,
  `settlement_id` BINARY(16) NULL,
  `city_id` BINARY(16) NULL,
  `postal_code_id` BINARY(16) NULL,
  `zone_id` BINARY(16) NULL,
  `settlement_type_id` BINARY(16) NULL,
  `datetime_id` BINARY(16) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_catalog_postal_codes_1`
    FOREIGN KEY (`city_id`)
    REFERENCES `example`.`city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_2`
    FOREIGN KEY (`municipality_id`)
    REFERENCES `example`.`municipality` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_3`
    FOREIGN KEY (`postal_code_id`)
    REFERENCES `example`.`postal_code` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_4`
    FOREIGN KEY (`state_id`)
    REFERENCES `example`.`state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_5`
    FOREIGN KEY (`settlement_id`)
    REFERENCES `example`.`settlement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_6`
    FOREIGN KEY (`zone_id`)
    REFERENCES `example`.`zone` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_7`
    FOREIGN KEY (`settlement_type_id`)
    REFERENCES `example`.`settlement_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_postal_codes_8`
    FOREIGN KEY (`datetime_id`)
    REFERENCES `example`.`datetime_at` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_catalog_postal_codes_1_idx` ON `example`.`catalog_postal_codes` (`city_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_2_idx` ON `example`.`catalog_postal_codes` (`municipality_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_3_idx` ON `example`.`catalog_postal_codes` (`postal_code_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_4_idx` ON `example`.`catalog_postal_codes` (`state_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_6_idx` ON `example`.`catalog_postal_codes` (`settlement_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_6_idx1` ON `example`.`catalog_postal_codes` (`zone_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_7_idx` ON `example`.`catalog_postal_codes` (`settlement_type_id` ASC) VISIBLE;

CREATE INDEX `fk_catalog_postal_codes_8_idx` ON `example`.`catalog_postal_codes` (`datetime_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
